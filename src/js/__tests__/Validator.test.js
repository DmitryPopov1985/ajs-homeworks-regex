import Validator from '../Validator';

test.each([
  ['User-63s', true],
  ['User_63s', true],
  ['Дмитрий', 'Допустимы только латинские буквы, символы тире -, подчёркивания _ и цифры (0-9)'],
  ['-User-63s', 'Логин не может начинаться цифрами, символами подчёркивания или тире'],
  ['_User-63s', 'Логин не может начинаться цифрами, символами подчёркивания или тире'],
  ['063-User', 'Логин не может начинаться цифрами, символами подчёркивания или тире'],
  ['User6363s', 'Логин не может содержать подряд более трёх цифр'],
  ['User63', 'Логин не может заканчиваться цифрами, символами подчёркивания или тире'],
  ['User-', 'Логин не может заканчиваться цифрами, символами подчёркивания или тире'],
  ['User_', 'Логин не может заканчиваться цифрами, символами подчёркивания или тире'],
])(
  'Check valid name',
  (name, expected) => {
    const check = new Validator();
    expect(check.validateUsername(name)).toBe(expected);
  },
);
